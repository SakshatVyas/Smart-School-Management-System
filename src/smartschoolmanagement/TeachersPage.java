/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package smartschoolmanagement;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 91826
 */
public class TeachersPage extends javax.swing.JFrame {

    /**
     * Creates new form TeachersPage
     */
    public TeachersPage() {
        initComponents();
        fetchTableData();
    }
    public void searchTableData() {
    
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost/smart", "root", "Sakshat11@")) {
                String query = "SELECT * FROM tbteacher WHERE teacherid LIKE ?";
                String searchQuery = txtsearch.getText().trim();
                PreparedStatement preparedStatement = con.prepareStatement(query);
                preparedStatement.setString(1, "%" + searchQuery + "%");
                ResultSet rs = preparedStatement.executeQuery();
                
                while (rs.next()) {
             
                    String Incharge = rs.getString("incharge");
                    String TeacherID = rs.getString("teacherid");
                    String TeacherName = rs.getString("teachername");
                    String FathersName = rs.getString("fathersname");
                    String MothersName = rs.getString("mothersname");
                    String Gender = rs.getString("gender");
                    String City = rs.getString("city");
                    String Address = rs.getString("address");
                    String MobileNumber = rs.getString("mobilenumber");
           
                          
                    model.addRow(new Object[]{Incharge,TeacherID,TeacherName,FathersName,MothersName,Gender,City,Address,MobileNumber});
                }
            }
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Error searching data: " + e.getMessage());
        }
    }
    // Fetch data from the database and display in JTable
    private void fetchTableData()
    {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);  // Clear any existing data
        
        try {
            // Register MySQL driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            
            try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost/smart", "root", "Sakshat11@")) {
                String query = "SELECT * FROM tbteacher";
                PreparedStatement preparedStatement = con.prepareStatement(query);
                ResultSet rs = preparedStatement.executeQuery();
                
                // Populate the JTable with data
                while (rs.next()) {
                    String incharge = rs.getString("incharge");
                    String teacherid = rs.getString("teacherid");
                    String teachername = rs.getString("teachername");
                    String fathersname = rs.getString("fathersname");
                    String mothersname = rs.getString("mothersname");
                    String gender = rs.getString("gender");
                    String city = rs.getString("city");
                    String address = rs.getString("address");
                    String mobilenumber = rs.getString("mobilenumber");
                   
               
                    model.addRow(new Object[]{incharge,teacherid,teachername,fathersname, mothersname,gender,city,address,mobilenumber});
                }
            }
        } catch (SQLException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(null, "Error fetching data: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtincharge = new javax.swing.JTextField();
        txtid = new javax.swing.JTextField();
        txttname = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtadd = new javax.swing.JTextArea();
        txtfname = new javax.swing.JTextField();
        cmbcity = new javax.swing.JComboBox<>();
        txtmname = new javax.swing.JTextField();
        rmale = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        rfemale = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtphn = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jLabel6.setText("Gender");

        jLabel7.setText("Teacher Name");

        txtincharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtinchargeActionPerformed(evt);
            }
        });

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });

        txtadd.setColumns(20);
        txtadd.setRows(5);
        jScrollPane2.setViewportView(txtadd);

        cmbcity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Amritsar", "Barnala", "Bathinda", "Fazilka", "Faridkot", "Fatehgarh Sahib", "Firozpur", "Gurdaspur", "Hoshiarpur", "Jalandhar", "Kapurthala", "Ludhinana", "Mansa", "Moga", "Mohali", "Muktsar", "Pathankot", "Patiala", "Rupnagar", "Sangrur", "Shahid Bhagat Singh Nagar", "Taran Taran" }));

        rmale.setText("Male");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Incharge of Class", "Teacher ID", "Teacher Name", "Father's Name", "Mother's Name", "Gender", "City", "Address", "Mobile Number"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable1);

        rfemale.setText("Female");

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setText("TEACHER PAGE");
        jLabel1.setAlignmentX(1.0F);
        jLabel1.setAlignmentY(1.0F);

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Teacher ID");

        jLabel9.setText("Address");

        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel10.setText("Mobile Number");

        jLabel3.setText("Incharge of class ");

        jLabel4.setText("Mother's Name");

        jLabel11.setText("City");

        jLabel5.setText("Father's Name");

        txtphn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtphnActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Edit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtphn)
                    .addComponent(txtincharge)
                    .addComponent(txtid)
                    .addComponent(txttname)
                    .addComponent(jScrollPane2)
                    .addComponent(txtfname)
                    .addComponent(cmbcity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtmname)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(12, 12, 12)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addGap(0, 101, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rfemale, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rmale, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(413, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(369, 369, 369))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtincharge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txttname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtmname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rfemale)
                                .addComponent(rmale)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(cmbcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtphn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton2)
                            .addComponent(jButton1))))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         String gender="";
        if(rmale.isSelected()==true)
        {
        gender="Male";
        }
        else if(rfemale.isSelected()==true)
        {
         gender="Female";
        }  
        else
        {
        gender="";
        }
          
        
         try {  
    Class.forName("com.mysql.cj.jdbc.Driver");  
    try ( 
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost/smart", "root", "Sakshat11@")) {
        String query = "INSERT INTO tbteacher (incharge,teacherid,teachername,fathersname,mothersname,gender,city,address,mobilenumber) VALUES (?,?,?,?,?,?,?,?,?)";
        java.sql.PreparedStatement preparedStatement = con.prepareStatement(query);
        preparedStatement.setString(1, txtincharge.getText());
        preparedStatement.setString(2, txtid.getText());
        preparedStatement.setString(3, txttname.getText());
        preparedStatement.setString(4, txtfname.getText());
        preparedStatement.setString(5, txtmname.getText());
        preparedStatement.setString(6, txtadd.getText());
        preparedStatement.setString(7, gender);
        preparedStatement.setString(8, cmbcity.getSelectedItem().toString());
        preparedStatement.setString(9, txtphn.getText());
      
       // preparedStatement.setString(8, txtdateofregister.getText());
        int rowsInserted = preparedStatement.executeUpdate();
        if (rowsInserted > 0) {
            JOptionPane.showMessageDialog(null, "Record inserted...");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Record is not inserted...");
        }   
        reset();
         }  
} catch (SQLException | ClassNotFoundException e) {  
    JOptionPane.showMessageDialog(null, e);  
} 
    }                                        

     public void reset()
    {
      txtincharge.setText("");
      txtid.setText("");
      txttname.setText("");  
      txtfname.setText("");
      txtmname.setText("");
      txtadd.setText("");
      rmale.setSelected(false);
      rfemale.setSelected(false);
      cmbcity.setSelectedIndex(0);
      txtphn.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
                        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost/smart", "root", "Sakshat11@")) {
            String query = "DELETE FROM tbteacher WHERE teacherid = ?";
            PreparedStatement preparedStatement = con.prepareStatement(query);
            preparedStatement.setString(1, txtid.getText());
      
                       
            

            int rowsDeleted = preparedStatement.executeUpdate();
            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(null, "Record deleted...");
                reset();
                fetchTableData();
            } else {
                JOptionPane.showMessageDialog(null, "Record not found...");
            }
        }
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(null, "Error deleting data: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtphnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtphnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtphnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          
        
        String gender="";
        if(rmale.isSelected()==true)
        {
        gender="Male";
        }
        else if(rfemale.isSelected()==true)
        {
         gender="Female";
        }  
        else
        {
        gender="";
        }
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost/smart", "root", "Sakshat11@")) {
            String query = "UPDATE tbteacher SET incharge=?,teachername=?,fathersname=?,mothersname=?,gender=?,city =?,address=?,mobilenumber =? WHERE teacherid = ?";
            PreparedStatement preparedStatement = con.prepareStatement(query);
           
        preparedStatement.setString(1, txtincharge.getText());
        preparedStatement.setString(2, txttname.getText());
        preparedStatement.setString(3, txtfname.getText());
        preparedStatement.setString(4, txtmname.getText());
        preparedStatement.setString(5, gender);
        preparedStatement.setString(6, cmbcity.getSelectedItem().toString());
        preparedStatement.setString(7, txtadd.getText());
        preparedStatement.setString(8, txtphn.getText());
        preparedStatement.setString(9, txtid.getText());
            int rowsUpdated = preparedStatement.executeUpdate();
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(null, "Record updated...");
                reset();
                fetchTableData();
            } else {
                JOptionPane.showMessageDialog(null, "Record not found...");
            }
        }
    } catch (SQLException | ClassNotFoundException e) {
        JOptionPane.showMessageDialog(null, "Error updating data: " + e.getMessage());
    }   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtinchargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtinchargeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtinchargeActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
         int selectedRow = jTable1.getSelectedRow();
            if (selectedRow >= 0) {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                String incharge = model.getValueAt(selectedRow, 0).toString();
                String teacherid = model.getValueAt(selectedRow, 1).toString();
                String teachername = model.getValueAt(selectedRow, 2).toString();
                String fathersname = model.getValueAt(selectedRow, 3).toString();
                String mothersname = model.getValueAt(selectedRow, 4).toString();
                String gender = model.getValueAt(selectedRow,5).toString();
                String city = model.getValueAt(selectedRow,6 ).toString();
                String address = model.getValueAt(selectedRow,7 ).toString();
                String mobilenumber = model.getValueAt(selectedRow,8 ).toString();

                
                
                txtid.setText(teacherid);
                txtincharge.setText(incharge);
                switch (gender) {
                  case "Male" -> rmale.setSelected(true);
                  case "Female" -> rfemale.setSelected(true);
                  default -> {
                      rmale.setSelected(false);
                      rfemale.setSelected(false);
                  }
              }
                
                cmbcity.setSelectedItem(city);
                txtadd.setText(address);
                txtphn.setText(mobilenumber);
                txtfname.setText(fathersname);
                txtmname.setText(mothersname);
                txttname.setText(teachername); 
            }
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
        searchTableData();
    }//GEN-LAST:event_txtsearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeachersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeachersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeachersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeachersPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeachersPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbcity;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton rfemale;
    private javax.swing.JRadioButton rmale;
    private javax.swing.JTextArea txtadd;
    private javax.swing.JTextField txtfname;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtincharge;
    private javax.swing.JTextField txtmname;
    private javax.swing.JTextField txtphn;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txttname;
    // End of variables declaration//GEN-END:variables
}
